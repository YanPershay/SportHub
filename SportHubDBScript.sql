CREATE DATABASE SportHub
GO
USE SportHub
GO
CREATE TABLE [User](
Id INT IDENTITY(1000,1),
GuidId UNIQUEIDENTIFIER PRIMARY KEY,
Username NVARCHAR(40) NOT NULL,
Email NVARCHAR(140) NOT NULL,
Password NVARCHAR(50) NOT NULL,
IsOnline BIT NOT NULL,
IsAdmin BIT NOT NULL
);

CREATE TABLE UserInfo(
Id INT IDENTITY(100,1) PRIMARY KEY,
UserId UNIQUEIDENTIFIER,
FirstName NVARCHAR(40) NOT NULL,
LastName NVARCHAR(40),
Country VARCHAR,
City VARCHAR,
DateOfBirth DATE,
SportLevel NVARCHAR(20) NOT NULL,
Height INT,
Weight INT,
AboutMe NVARCHAR(150),
Motivation NVARCHAR(70),
AvatarUrl VARCHAR,
FOREIGN KEY (UserId) REFERENCES [User](GuidId)
ON DELETE CASCADE
);

CREATE TABLE Post(
Id INT IDENTITY(100,1) PRIMARY KEY,
UserId UNIQUEIDENTIFIER,
Text NVARCHAR(MAX),
ImageUrl VARCHAR,
DateCreated DATE,
IsUpdated BIT,
FOREIGN KEY (UserId) REFERENCES [User](GuidId)
);

CREATE TABLE UserPost(
UserId UNIQUEIDENTIFIER,
PostId INT,
FOREIGN KEY (UserId) REFERENCES [User](GuidId)
ON DELETE CASCADE,
FOREIGN KEY (PostId) REFERENCES Post(Id)
ON DELETE CASCADE
);

CREATE TABLE AdminPost(
Id INT IDENTITY(100,1) PRIMARY KEY,
Category VARCHAR NOT NULL,
Title VARCHAR NOT NULL,
Text VARCHAR NOT NULL,
Duration INT NOT NULL check(Duration >=1 and Duration <= 5),
Complexity INT NOT NULL check(Complexity >=1 and Complexity <= 5),
ImageUrl VARCHAR NOT NULL,
DateCreated DATE NOT NULL,
IsUpdated BIT,
UserId UNIQUEIDENTIFIER,
FOREIGN KEY (UserId) REFERENCES [User](GuidId)
);

CREATE TABLE Comment(
Id INT IDENTITY(1,1) PRIMARY KEY,
UserId UNIQUEIDENTIFIER,
Text NVARCHAR(500),
DateCreated DATE,
IsUpdated BIT,
PostId INT,
FOREIGN KEY (PostId) REFERENCES Post(Id)
ON DELETE CASCADE,
FOREIGN KEY (UserId) REFERENCES [User](GuidId)
);

CREATE TABLE UsersLike(
Id INT IDENTITY(1,1) PRIMARY KEY,
UserId UNIQUEIDENTIFIER NOT NULL,
PostId INT NOT NULL,
FOREIGN KEY (UserId) REFERENCES [User](GuidId)
ON DELETE CASCADE,
FOREIGN KEY (PostId) REFERENCES Post(Id)
ON DELETE CASCADE
);

CREATE TABLE Subscribes(
Id INT IDENTITY(1,1),
UserId UNIQUEIDENTIFIER NOT NULL,
SubscriberId UNIQUEIDENTIFIER NOT NULL,
FOREIGN KEY (UserId) REFERENCES [User](GuidId)
ON DELETE CASCADE,
FOREIGN KEY (SubscriberId) REFERENCES [User](GuidId)--Идентичные внешние ключи
);

CREATE TABLE SavedPost(
Id INT IDENTITY(1,1),
UserId UNIQUEIDENTIFIER,
PostId INT,
FOREIGN KEY (UserId) REFERENCES [User](GuidId)
ON DELETE CASCADE,
FOREIGN KEY (PostId) REFERENCES Post(Id)
ON DELETE CASCADE
);

CREATE TABLE Event(
UserId UNIQUEIDENTIFIER NOT NULL,
EventId UNIQUEIDENTIFIER,
DestinationId INT,
Action varchar NOT NULL CHECK(Action IN ('Like', 'Subscribe', 'Comment')),
FOREIGN KEY (UserId) REFERENCES [User](GuidId)
ON DELETE CASCADE
);

